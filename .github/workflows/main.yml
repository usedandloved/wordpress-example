name: Publish Docker image
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/usedandloved/wordpress-example
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1
      #   with:
      #     buildkitd-flags: --debug
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.CR_PAT }}
      #     # password: abc
      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     platforms: linux/amd64
      #     build-args: |
      #       "acf_pro_key=${{ secrets.ACF_PRO_KEY }}"
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
      - uses: actions/checkout@v2
      - name: Echo version
        run: echo  ${{ steps.meta.outputs.version }}
      - name: Edit files
        run: "sed -i 's/^version:.* # Chart version$/version: ${{ steps.meta.outputs.version }} # Chart version/g' charts/wordpress-example/Chart.yaml"
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply php-cs-fixer changes
      - name: 'Run if changes have been detected'
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: echo "Changes!"

      - name: 'Run if no changes have been detected'
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        run: echo "No Changes!"
